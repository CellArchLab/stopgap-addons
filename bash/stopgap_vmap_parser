#! /usr/bin/env bash
set -e              # Crash on error
set -o nounset      # Crash on unset variables

## stopgap_job_parser.sh
#
# This script is used to generate a properly formated stopgap .star parameter 
# file for calculating a variance map from given input references and the 
# subtomograms used to generate them.
#
# WW 05-2019
# RDR 11-2020

# Read config file. Can be given as an argument or read from the current directory.

# Check if we are on sciCORE cluster:
# if [ `hostname | grep bc2.ch | echo $?` -eq 0 ]; then 
#     ml purge
#     ml load MCR/9.0
#     ml load OpenMPI/4.1.1-GCC-10.3.0
# fi

cfgfile=sg_vmap.cfg
if [ $# -eq 0 ]; then
    source ${cfgfile}
else
    source "$1"
fi
rootdir=`pwd`  # Root subtomogram averaging directory (automatically defined as the directory from which the script is called)

if [ "${lp_res}" != "none" ]; then

	lp_rad=`echo "$boxsize * $pixelsize / $lp_res" | bc`

fi

if [ "${hp_res}" != "none" ]; then

	hp_rad=`echo "$boxsize * $pixelsize / $hp_res" | bc`

fi


########################################################################################################################################################################################################
########## GENERATE STOPGAP .STAR FILE
########################################################################################################################################################################################################

# Path to MATLAB executables
parser="${STOPGAPHOME}/bin/stopgap_parser.sh"


# Run parser 
eval "${parser} vmap param_name ${param_name} rootdir ${rootdir} tempdir ${tempdir} commdir ${commdir} rawdir ${rawdir} refdir ${refdir} maskdir ${maskdir} listdir ${listdir} subtomodir ${subtomodir} metadir ${metadir} vmap_mode ${vmap_mode} iteration ${iteration} binning ${binning} motl_name ${motl_name} ref_name ${ref_name} vmap_name ${vmap_name} mask_name ${mask_name} wedgelist_name ${wedgelist_name} subtomo_name ${subtomo_name} lp_rad ${lp_rad} lp_sigma ${lp_sigma} hp_rad ${hp_rad} hp_sigma ${hp_sigma} symmetry ${symmetry} score_thresh ${score_thresh} fthresh ${fthresh}"
exit




